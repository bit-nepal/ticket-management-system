@page "/ticket"
<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<Card Style="width:18rem;">
    <CardHeader>
        Ticket Creation Form
    </CardHeader>
    <CardBody>

        <EditForm Model="@ticket" class="form-inline" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mt-4">
                <label for="Nationality" class="h5">Nationality:</label>
                <InputSelect @bind-Value="ticket.Nationality">
                    @foreach (var nationality in Enum.GetValues(typeof(Nationality)))
                    {
                        <option value="@nationality">@nationality</option>
                    }
                </InputSelect>
            </div>

            @if(ticket.Nationality == Nationality.Nepali)
            {
                <div class="form-group mt-4">
                    <label for="PersonType" class="h5">Person Type:</label>
                    <InputSelect @bind-Value="ticket.PersonType">
                        @foreach (var person in Enum.GetValues(typeof(PersonType)))
                        {
                            <option value="@person">@person</option>
                        }
                    </InputSelect>
                </div>
            }

            <div class="form-group mt-4">
                <label for="GroupVisit" class="h5">Group Visit:</label>
                <Switch @bind-Value="ticket.IsGroupVisit" />
            </div>

            @if (ticket.IsGroupVisit == true)
            {
                <div class="form-group mt-4">
                    <label for="NoOfPeople" class="h5">No. of People</label>
                    <NumberInput TValue="int" @bind-Value="ticket.NoOfPeople" />
                </div>

                <div class="form-group mt-4">
                    <label for="CustomText" class="h5">Group Name: </label>
                    <InputText @bind-Value="ticket.CustomText" Placeholder="Enter group name" />
                </div>
            }

            <div class="form-group mt-4">
                <label for="AddOn" class="h5">Add Ons:</label>
                @foreach (var addonType in Enum.GetValues(typeof(AddOnType)).Cast<AddOnType>())
                {
                    // Find the existing AddOn or create a new one if it doesn't exist
                    var currentAddon = ticket.AddOns.FirstOrDefault(a => a.AddOnType == addonType) ?? new AddOn { AddOnType = addonType };

                    <div class="form-group mt-4">
                        <label for="@addonType" class="h5">@addonType</label>
                        @if (ticket.IsGroupVisit)
                        {
                            <InputNumber TValue="int" @bind-Value="currentAddon.Quantity" class="form-control" />
                        }
                        else{
                            // <InputCheckbox @bind-Value="Convert.ToBoolean(currentAddon.Quantity)"></InputCheckbox>
                        }
                            <!-- Ensure that the addon is in the list -->
                            @if (!ticket.AddOns.Contains(currentAddon))
                            {
                                ticket.AddOns.Add(currentAddon);
                            }
                        </div>
                    }
                </div>
    

            <div class="d-grid gap-2 col-6 mx-auto mt-4">
                <Button Type="ButtonType.Submit" Color="ButtonColor.Primary"> Submit </Button>
            </div> 

        </EditForm>

    </CardBody>
</Card>

@code {
    tms.Data.Ticket ticket = new tms.Data.Ticket()
        {
            AddOns = new List<AddOn>
            {
            new AddOn { AddOnType = AddOnType.Camera },
            new AddOn { AddOnType = AddOnType.VideoCamera }
            }
        };

    private async Task HandleValidSubmit() => PrintData();

    private void PrintData(){
        Console.WriteLine("Barcode data is:" + ticket.BarCodeData);
        Console.WriteLine("Nationality is: " + ticket.Nationality);
        Console.WriteLine("Barcode data is:" + ticket.PersonType);
        Console.WriteLine("Is group visit?:" + ticket.IsGroupVisit);
        Console.WriteLine("No. of people:" + ticket.NoOfPeople);
        Console.WriteLine("Group Name:" + ticket.CustomText);
        Console.WriteLine("No. of Camera:" + ticket.AddOns.First(x => x.AddOnType == AddOnType.Camera).Quantity);
        Console.WriteLine("No. of Video Camera:" + ticket.AddOns.First(x => x.AddOnType == AddOnType.VideoCamera).Quantity);


    }
}