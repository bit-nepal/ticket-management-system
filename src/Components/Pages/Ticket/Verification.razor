@page "/verification"
<h3>Verification</h3>

<Offcanvas 
      @ref="offcanvas" 
      UseStaticBackdrop="true" 
      style="width: 0px; 
             height:0px;" />

<input type="text" 
        @ref="barCodeInput" 
        @bind-value="barCodeData" 
        @bind-value:event="oninput" 
        @onkeydown="Enter"
        @onblur="lostFocus"
        style="position:absolute; 
                opacity:0; 
                height:10px; 
                width:10px;"/>

@if (IsValid)
{
    <Card Color="CardColor.Success" Class="mb-4" Style="width:18rem;">
        <CardHeader>Valid</CardHeader>
        <CardBody>
            <CardTitle>The ticket is valid.</CardTitle>
            <CardText>You can enter the premises.</CardText>
            <CardText>N</CardText>
        </CardBody>
    </Card>
}
else
{
    <Card Color="CardColor.Danger" Class="mb-4" Style="width:18rem;">
        <CardHeader>Invalid</CardHeader>
        <CardBody>
            <CardTitle>The ticket is invalid.</CardTitle>
            <CardText>Sorry, you cannot enter. Please purchase new ticket to verify.</CardText>
        </CardBody>
    </Card>
}


Current value: @barCodeData
@code{
    private bool IsValid;
    private string barCodeData;
    private Offcanvas? offcanvas;
    private ElementReference barCodeInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        { 
            await barCodeInput.FocusAsync();
        }
    }

    private void lostFocus(){
      barCodeInput.FocusAsync();
    }

    public void Enter(KeyboardEventArgs e)
    {
      if (e.Code == "Enter" || e.Code == "NumpadEnter")
      {
        ValidateBarCode();
      }
    }

    private void ValidateBarCode()
    {
      Console.WriteLine($"Validating BarCode: {barCodeData}");
      IsValid = barCodeData == "123456";
      barCodeData = String.Empty;
    }
}
