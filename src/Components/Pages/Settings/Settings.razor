@page "/settings"
@rendermode InteractiveServer
@inject tms.Services.StorageConfigurationService StorageConfigService
@inject tms.Services.PrinterConfigurationService PrinterConfigService
@inject tms.Services.Printer.IPrinterService printerService

<div class="d-flex justify-content-around">
    <div>
        <h3>Storage Settings</h3>
        <Card Style="width:18rem;" Class="">
            <CardBody>
                
                <EditForm Model="@StorageConfigService" class="form-inline" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group mt-4">
                        <label for="SQLitePath" class="h5">SQLite Database Path:</label>
                        <div class="d-flex">
                            <InputText class="form-control form-control-lg" @bind-Value="SQLitePath" placeholder="Enter SQLite DB Path" /> &nbsp; &nbsp;
                            <Button Color="ButtonColor.Primary" Outline="true" @onclick="SaveSQLitePath"> Save </Button>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <label for="OnlineDBConnectionString" class="h5">Online DB Connection String:</label>
                        <div class="d-flex">
                            <InputText class="form-control form-control-lg" @bind-Value="RemoteDbConnectionString" placeholder="Enter Online DB Connection" />&nbsp; &nbsp;
                            <Button Color="ButtonColor.Primary" Outline="true" @onclick="SaveRemoteDbConnectionString"> Save </Button>
                        </div>
                    </div>

                    <div class="form-group mt-4">                
                        <label for="BackupFilePath" class="h5">Backup File Path:</label>
                        <div class="d-flex">
                            <InputText class="form-control form-control-lg" @bind-Value="LocalFileStoragePath" placeholder="Enter Backup File Path" />&nbsp; &nbsp;
                            <Button Color="ButtonColor.Success" Outline="true" @onclick="SaveLocalFileStoragePath"> Save </Button>
                        </div>
                    </div>

                  </EditForm>

            </CardBody>
        </Card>
    </div>

    <div>
        <h3>Printer Settings</h3>
        <Card Style="width:18rem;" Class="">
            <CardBody>
                
                <EditForm Model="@StorageConfigService" class="form-inline" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />


                    <div class="form-group mt-4">
                        <label for="Port" class="h5">IP Address:</label>
                        <div class="d-flex">
                            <InputText class="form-control form-control-lg" @bind-Value="PrinterHost" placeholder="Enter HostName or IpAddress" /> &nbsp; &nbsp;
                            <Button Color="ButtonColor.Primary" Outline="true" @onclick="SetPrinterHost"> Save </Button>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <label for="IPAddress" class="h5">Port:</label>
                        <div class="d-flex">
                            <InputNumber class="form-control form-control-lg" @bind-Value="PrinterPort" placeholder="Enter Port" /> &nbsp; &nbsp;
                            <Button Color="ButtonColor.Primary" Outline="true" @onclick="SetPrinterPort"> Save </Button>
                        </div>
                    </div>
                  <div class="form-group mt-4">
                        <label for="Com Port" class="h5">Port:</label>
                        <div class="d-flex">
                            <InputText class="form-control form-control-lg" @bind-Value="PrinterComPort" placeholder="Enter Com Port" /> &nbsp; &nbsp;
                            <Button Color="ButtonColor.Primary" Outline="true" @onclick="SetPrinterComPort"> Save </Button>
                        </div>
                    </div>

<div class="form-group mt-4">
                        <div class="d-flex">
                        <label for="IPAddress" class="h5">Test:</label>
                            <InputText hidden class="form-control form-control-lg" @bind-Value="message" placeholder="Enter message" />&nbsp; &nbsp;
                            <Button Color="ButtonColor.Success" Outline="true" @onclick="PrintMessage"> Print</Button> &nbsp;
                            <Button Color="ButtonColor.Success" Outline="true" @onclick="FeedPaper"> Feed</Button> &nbsp;
                            <Button Color="ButtonColor.Success" Outline="true" @onclick="CutPaper"> Cut</Button>
                            <Switch @bind-Value="isLocalConnection" />
                        </div>&nbsp;
                    </div>

                                    </EditForm>
            </CardBody>
        </Card>
    </div>
</div>
<div class="d-flex justify-content-center">
    <Button Color="ButtonColor.Primary" Outline="true" @onclick="SaveAllSettings"> Save All </Button> &nbsp; &nbsp;
<Button Color="ButtonColor.Primary" Outline="true" @onclick="SaveRemoteDbConnectionString"> Test </Button>
</div>
@code {
    private string SQLitePath;
    private string RemoteDbConnectionString;
    private string LocalFileStoragePath;

    private string PrinterHost;
    private int PrinterPort;
    private string PrinterComPort;
    
    private bool isLocalConnection;
    private string message = "Hello World !!";

    private async Task HandleValidSubmit()
    {
        PrintData();
    }

    private void PrintData()
    {
        Console.WriteLine(SQLitePath);
        Console.WriteLine(RemoteDbConnectionString);
        Console.WriteLine(LocalFileStoragePath);
        Console.WriteLine(message);
    }

    protected override void OnInitialized()
    {
        SQLitePath = StorageConfigService.GetSQLiteDbPath();
        RemoteDbConnectionString = StorageConfigService.GetRemoteDbConnectionString();
        LocalFileStoragePath = StorageConfigService.GetLocalFileStoragePath();
        
        
        Console.WriteLine("Host: " +PrinterConfigService.GetHost()); 
        PrinterHost= PrinterConfigService.GetHost();
        Console.WriteLine("Port: " +PrinterConfigService.GetPort()); 
        PrinterPort= PrinterConfigService.GetPort() ?? 0;
        PrinterComPort= PrinterConfigService.GetComPort();
    }

    private void PrintMessage() => printerService.PrintText(message);
    private void FeedPaper() => printerService.Feed();
    private void CutPaper() => printerService.Cut();
    private void SaveSQLitePath() => StorageConfigService.SetSQLiteDbPath(SQLitePath);
    private void SaveRemoteDbConnectionString() => StorageConfigService.SetRemoteDbConnectionString(RemoteDbConnectionString);
    private void SaveLocalFileStoragePath() => StorageConfigService.SetLocalFileStoragePath(LocalFileStoragePath);

    private void SetPrinterHost() => PrinterConfigService.SetHost(PrinterHost);
    private void SetPrinterPort() => PrinterConfigService.SetPort(PrinterPort);
    private void SetPrinterComPort() => PrinterConfigService.SetComPort(PrinterComPort);

    private void SaveAllSettings() {
      SaveSQLitePath() ;
      SaveRemoteDbConnectionString();
      SaveLocalFileStoragePath();

      SetPrinterHost();
      SetPrinterPort();
      printerService.SetPrinterMode(isLocalConnection);
    }
}
